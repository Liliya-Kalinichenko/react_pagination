{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesAmount","Math","ceil","pages","isSelected","page","className","cn","disabled","href","onClick","map","active","items","App","useState","setSelectedPage","setPerPage","handlePageChange","length","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAQd,EAAW,EAAGW,GACtBI,EAAa,SAACC,GAAD,OAAiBP,IAAgBO,GAEpD,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUJ,EAAW,KADvB,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAW,GACtB,OACA,QACJM,QAAS,kBAAON,EAAW,IACtBL,EAAaD,EAAc,IARlC,oBAcDK,EAAMQ,KAAI,SAAAN,GAAI,OACb,oBAEEC,UAAWC,IAAG,YAAa,CACzBK,OAAQR,EAAWC,KAHvB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMX,EAAaM,IAJ9B,SAMGA,KAXEA,MAgBT,oBAAIC,UAAWC,IAAG,YAAa,CAC7BC,SAAUJ,EAAWJ,KADvB,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAWJ,GACtB,OACA,QACJU,QAAS,kBAAON,EAAWJ,IACtBD,EAAaD,EAAc,IARlC,wBC1DFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAuCC,mBAAS,GAAhD,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAEMC,EAAmB,SAACb,GAAD,OAAkBW,EAAgBX,IAMrDT,EAAQiB,EAAMM,OACdC,EAAatB,EAAcD,EAAWA,EACtCwB,EAAYxB,EAAUC,EAAeF,EACvCC,EAAUC,EACVF,EACE0B,EAAeT,EAAMU,MAAMH,EAAWC,GAE5C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAY,EAD7C,cACoDC,EADpD,eACmEzB,EADnE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAO5B,EACP6B,SA3BY,SAACC,GACrBV,EAAWW,OAAOD,EAAME,OAAOJ,QAC/BP,EAAiB,IAoBX,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcmB,IAGhB,6BACGI,EAAaX,KAAI,SAAAoB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.797f1974.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesAmount);\n  const isSelected = (page:number) => currentPage === page;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isSelected(1),\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isSelected(1)\n            ? 'true'\n            : 'false'}\n          onClick={() => !isSelected(1)\n            && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: isSelected(page),\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: isSelected(pagesAmount),\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isSelected(pagesAmount)\n            ? 'true'\n            : 'false'}\n          onClick={() => !isSelected(pagesAmount)\n            && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setSelectedPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePageChange = (page: number) => setSelectedPage(page);\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    handlePageChange(1);\n  };\n\n  const total = items.length;\n  const firstItem = (currentPage * perPage) - perPage;\n  const lastItem = (perPage * currentPage) < total\n    ? perPage * currentPage\n    : total;\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}